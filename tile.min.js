"use strict";angular.module("game",["templates","game.factories.tile","game.directives.tile"]).constant("MAP_HEIGHT",20).constant("MAP_WIDTH",20).controller("GameCtrl",["Tile","MAP_HEIGHT","MAP_WIDTH",function(t,e,i){var l=this;l.tiles=[],l.createMap=function(){console.log("creating");for(var n=0;e>n;n++)for(var o=0;i>o;o++){var a=new t({x:n,y:o,z:0},{type:"grass"});l.tiles.push(a)}console.log(l.tiles)},l.createMap()}]),function(t){try{t=angular.module("templates")}catch(e){t=angular.module("templates",[])}t.run(["$templateCache",function(t){t.put("common/directives/tile/tile.html",'<div id="{{ tile.id }}" class="tile{{ tile.type }}">\n  <div class="face left thin_face"\n       style="z-index: {{ tile.translated.z }}; left: {{ tile.translated.y }}px; top: {{ tile.translated.x }}px;"></div>\n  <div class="face right thin_face"></div>\n  <div class="face top"></div>\n</div>')}])}(),angular.module("game.directives.tile",[]).controller("TileCtrl",function(){console.log("Hello from tile controller")}).directive("tile",function(){return{restrict:"E",require:"ngModel",controller:"TileCtrl as tile",templateUrl:"common/directives/tile/tile.html",link:function(){console.log(arguments)}}}),angular.module("game.factories.tile",[]).constant("TILE_WIDTH",45).constant("TILE_HEIGHT",26).constant("Z_LEVEL_ADJUSTMENT",2e3).constant("Z_ROW_ADJUSTMENT",100).constant("Z_OFFSET",22).factory("Tile",["TILE_WIDTH","TILE_HEIGHT","Z_LEVEL_ADJUSTMENT","Z_ROW_ADJUSTMENT","Z_OFFSET",function(t,e,i,l,n){return function(o,a){console.log("Hello from Tile Factory");var r=this;return r.translated={x:0,y:0,z:0},r.position={x:0,y:0,z:0},r.type=a.type,r.setPosition=function(o){r.position={x:o.x||r.position.x,y:o.y||r.position.y,z:o.z||r.position.x},r.translated={x:t*o.x+o.y*t,y:e*o.x*-1+o.y*e-o.z*n,z:o.z*i+o.y*l-o.x}},r.setPosition(a),r}}]);