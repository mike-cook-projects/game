{
  "name": "parse-url",
  "version": "0.0.4",
  "description": "Parse a URL.",
  "author": {
    "name": "Talon Poole"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/LegitTalon/parseUrl.git"
  },
  "preferGlobal": false,
  "bin": {},
  "dependencies": {},
  "devDependencies": {
    "chai": "1.8.1",
    "mocha": "1.13.0"
  },
  "readme": "## parseUrl v0.0.2-alpha\n*Written by [Talon Poole](http://theghostin.me) and released under the MIT license*\n\nGet the most out of your URLs.\n\n## How to Use\nfirst thing is first\n\n    npm install parse-url\n\nthen\n\n    var parseUrl = require(\"parse-url\");\n\nSimply call `parseUrl()` and pass in the url as a string.\n\n\tvar urlStuff = parseUrl(\"https://github.com/LegitTalon/parseUrl\");\n\nIt will return an object. Here's what the URL above would return:\n\n    { protocol: \"https\"\n    , baseUrl: \"github.com\"\n    , dirs: [\"/LegitTalon\", \"/parseUrl\"]\n    , filePath: \"/LegitTalon/parseUrl\"\n    , file: \"index.html\"\n    , fileType: \".html\"\n    , fileName: \"index\"\n    };\n\nin the example above\n\n    urlStuff.fileType == \".html\"; // true\n\turlStuff.name == \"index\"; // true\n\nbecause those are the defaults choosen by `parseUrl` if it doesn't\nfind an extension.\n\n\tvar coolSong = parseUrl(\"https://theghostin.me/cool%20Song.mp3\");\n\nreturns:\n\n\t{ protocol: \"https\"\n\t, baseUrl: \"theghostin.me\"\n    , dirs: [\"/\"]\n    , filePath: \"cool%20song.mp3\"\n    , file: \"cool%20song.mp3\"\n    , fileType: \".mp3\"\n    , fileName: \"cool%20song\"\n\t};\n\n## Bugs?\nIf there's a bug please report it appropriately or submit a pull request.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/LegitTalon/parseUrl/issues"
  },
  "homepage": "https://github.com/LegitTalon/parseUrl",
  "_id": "parse-url@0.0.4",
  "_from": "parse-url@0.0.4"
}
